{
    "openapi": "3.0.0",
    "info": {
        "title": "SMS Hub API",
        "description": "A comprehensive SMS gateway service that provides a unified API for sending SMS messages through multiple providers. Perfect for developers who need reliable SMS delivery with failover support and detailed usage tracking.",
        "contact": {
            "name": "SMS Hub Support Team",
            "url": "https://smshub.com/support",
            "email": "support@smshub.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://smshub.devdata.uz",
            "description": "Production Server"
        },
        {
            "url": "https://staging.smshub.devdata.uz",
            "description": "Staging Server"
        },
        {
            "url": "http://localhost:8000",
            "description": "Development Server"
        }
    ],
    "paths": {
        "/oauth/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get OAuth2 access token",
                "description": "Obtain an access token using OAuth2 client credentials authentication for server-to-server communication. The access token is required for all subsequent API calls. No scopes are required for this endpoint.",
                "operationId": "getToken",
                "requestBody": {
                    "description": "OAuth2 token request parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "grant_type",
                                    "client_id",
                                    "client_secret"
                                ],
                                "properties": {
                                    "grant_type": {
                                        "description": "OAuth2 grant type - use 'client_credentials' for server-to-server authentication",
                                        "type": "string",
                                        "enum": [
                                            "client_credentials"
                                        ],
                                        "example": "client_credentials"
                                    },
                                    "client_id": {
                                        "description": "Your OAuth2 client ID (obtained from the admin panel)",
                                        "type": "string",
                                        "example": "0199f662-a7e6-72bc-a87e-4885987c598d"
                                    },
                                    "client_secret": {
                                        "description": "Your OAuth2 client secret (keep this secure)",
                                        "type": "string",
                                        "example": "EqPN6oCgpb9SG7TriwGSWHJO9S57DOSbGJ7Nf9AA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Access token obtained successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid grant type, missing parameters, or malformed request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "invalid_request"
                                        },
                                        "error_description": {
                                            "type": "string",
                                            "example": "The request is missing a required parameter"
                                        },
                                        "hint": {
                                            "type": "string",
                                            "example": "Check the grant_type parameter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid client credentials or user credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "invalid_client"
                                        },
                                        "error_description": {
                                            "type": "string",
                                            "example": "Client authentication failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded - Too many authentication attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "rate_limit_exceeded"
                                        },
                                        "error_description": {
                                            "type": "string",
                                            "example": "Too many authentication attempts"
                                        },
                                        "retry_after": {
                                            "type": "integer",
                                            "example": 60
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh OAuth2 access token",
                "description": "Refresh an expired access token using refresh token",
                "operationId": "refreshToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "grant_type",
                                    "refresh_token"
                                ],
                                "properties": {
                                    "grant_type": {
                                        "description": "Grant type",
                                        "type": "string",
                                        "example": "refresh_token"
                                    },
                                    "refresh_token": {
                                        "description": "Refresh token",
                                        "type": "string",
                                        "example": "def50200..."
                                    },
                                    "client_id": {
                                        "description": "OAuth2 client ID",
                                        "type": "string",
                                        "example": "0199f662-a7e6-72bc-a87e-4885987c598d"
                                    },
                                    "client_secret": {
                                        "description": "OAuth2 client secret",
                                        "type": "string",
                                        "example": "EqPN6oCgpb9SG7TriwGSWHJO9S57DOSbGJ7Nf9AA"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "invalid_grant"
                                        },
                                        "error_description": {
                                            "type": "string",
                                            "example": "The refresh token is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "invalid_client"
                                        },
                                        "error_description": {
                                            "type": "string",
                                            "example": "Client authentication failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user info",
                "description": "Get information about the currently authenticated user",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "List SMS messages",
                "description": "Retrieve a paginated list of SMS messages sent by your application. Use this endpoint to track message history, check delivery status, and monitor your SMS usage. You can filter by status and paginate through results.",
                "operationId": "getMessages",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination (starts from 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (max 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter messages by delivery status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "queued",
                                "sent",
                                "delivered",
                                "failed"
                            ],
                            "example": "delivered"
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Filter messages from this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Filter messages until this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Message"
                                            }
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/PaginationMeta"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid query parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Send SMS message",
                "description": "Send a new SMS message through the SMS Hub. The message will be queued for delivery and processed by the most suitable provider based on availability and priority. You can specify a preferred provider or let the system choose automatically.",
                "operationId": "sendMessage",
                "requestBody": {
                    "description": "SMS message details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "to",
                                    "message"
                                ],
                                "properties": {
                                    "to": {
                                        "description": "Recipient phone number in international format (E.164)",
                                        "type": "string",
                                        "pattern": "^\\+[1-9]\\d{1,14}$",
                                        "example": "+998901234567"
                                    },
                                    "message": {
                                        "description": "SMS message content (max 1600 characters for Unicode, 160 for ASCII)",
                                        "type": "string",
                                        "maxLength": 1600,
                                        "example": "Hello! Your verification code is 123456. Valid for 5 minutes."
                                    },
                                    "provider": {
                                        "description": "Preferred SMS provider (optional - system will choose if not specified)",
                                        "type": "string",
                                        "example": "eskiz"
                                    },
                                    "sender_id": {
                                        "description": "Sender ID (max 11 characters, alphanumeric only)",
                                        "type": "string",
                                        "maxLength": 11,
                                        "pattern": "^[a-zA-Z0-9]+$",
                                        "example": "SMSHub"
                                    },
                                    "priority": {
                                        "description": "Message priority (1=highest, 5=lowest, default=3)",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Message queued for sending successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Message"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message queued for sending"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid phone number format or message content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Required fields missing or invalid format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Rate limit exceeded - Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Rate limit exceeded"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Too many requests. Please try again later."
                                        },
                                        "retry_after": {
                                            "type": "integer",
                                            "example": 60
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/messages/{id}": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Get message details",
                "description": "Retrieve detailed information about a specific SMS message including delivery status, cost, and provider information. Use this endpoint to check the current status of a message you've sent.",
                "operationId": "getMessage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique message identifier (UUID)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "550e8400-e29b-41d4-a716-446655440000"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found - The specified message ID does not exist or you don't have access to it",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message not found"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/providers": {
            "get": {
                "tags": [
                    "Providers"
                ],
                "summary": "List available SMS providers",
                "description": "Retrieve a list of all available SMS providers with their capabilities, status, and priority. This information helps you understand which providers are available for sending messages and their specific features like Unicode support, delivery reports, etc.",
                "operationId": "getProviders",
                "responses": {
                    "200": {
                        "description": "Providers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Provider"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/usage": {
            "get": {
                "tags": [
                    "Usage"
                ],
                "summary": "Get usage statistics",
                "description": "Retrieve comprehensive SMS usage statistics for your account. This endpoint provides detailed insights into your SMS consumption, costs, and delivery performance across different time periods and providers.",
                "operationId": "getUsage",
                "parameters": [
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Time period for statistics aggregation",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "month",
                            "enum": [
                                "today",
                                "week",
                                "month",
                                "year"
                            ],
                            "example": "month"
                        }
                    },
                    {
                        "name": "provider",
                        "in": "query",
                        "description": "Filter statistics by specific provider",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "eskiz"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Custom start date for statistics (YYYY-MM-DD format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Custom end date for statistics (YYYY-MM-DD format)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UsageStats"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing access token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error - Invalid date format or parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/usage/daily": {
            "get": {
                "tags": [
                    "Usage"
                ],
                "summary": "Get daily usage statistics",
                "description": "Retrieve daily SMS usage statistics",
                "operationId": "getDailyUsage",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DailyUsage"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/usage/summary": {
            "get": {
                "tags": [
                    "Usage"
                ],
                "summary": "Get usage summary",
                "description": "Retrieve a summary of SMS usage statistics",
                "operationId": "getUsageSummary",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UsageSummary"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "TokenResponse": {
                "title": "Token Response",
                "description": "OAuth2 token response",
                "properties": {
                    "token_type": {
                        "description": "Token type",
                        "type": "string",
                        "example": "Bearer"
                    },
                    "expires_in": {
                        "description": "Token expiration time in seconds",
                        "type": "integer",
                        "example": 3600
                    },
                    "access_token": {
                        "description": "Access token",
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                    },
                    "refresh_token": {
                        "description": "Refresh token (for password grant)",
                        "type": "string",
                        "example": "def50200..."
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User information",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "is_admin": {
                        "description": "Admin status",
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "Message": {
                "title": "SMS Message",
                "description": "SMS message object",
                "properties": {
                    "id": {
                        "description": "Message ID",
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "to": {
                        "description": "Recipient phone number",
                        "type": "string",
                        "example": "+998901234567"
                    },
                    "from": {
                        "description": "Sender ID",
                        "type": "string",
                        "example": "4546"
                    },
                    "text": {
                        "description": "Message content",
                        "type": "string",
                        "example": "Hello, this is a test message!"
                    },
                    "status": {
                        "description": "Message status",
                        "type": "string",
                        "enum": [
                            "queued",
                            "sent",
                            "delivered",
                            "failed"
                        ],
                        "example": "queued"
                    },
                    "provider_id": {
                        "description": "Provider ID",
                        "type": "integer",
                        "example": 1
                    },
                    "cost": {
                        "description": "Message cost",
                        "type": "number",
                        "format": "float",
                        "example": 0.05
                    },
                    "parts": {
                        "description": "Number of SMS parts",
                        "type": "integer",
                        "example": 1
                    },
                    "idempotency_key": {
                        "description": "Idempotency key",
                        "type": "string",
                        "example": "msg_1234567890"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "Provider": {
                "title": "SMS Provider",
                "description": "SMS provider information",
                "properties": {
                    "id": {
                        "description": "Provider ID",
                        "type": "integer",
                        "example": 1
                    },
                    "display_name": {
                        "description": "Provider display name",
                        "type": "string",
                        "example": "Eskiz"
                    },
                    "description": {
                        "description": "Provider description",
                        "type": "string",
                        "example": "Eskiz SMS provider for Uzbekistan"
                    },
                    "is_active": {
                        "description": "Provider status",
                        "type": "boolean",
                        "example": true
                    },
                    "priority": {
                        "description": "Provider priority",
                        "type": "integer",
                        "example": 1
                    },
                    "capabilities": {
                        "description": "Provider capabilities",
                        "type": "object",
                        "example": {
                            "dlr": true,
                            "unicode": true,
                            "concatenation": true
                        }
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00Z"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "datetime",
                        "example": "2024-01-15T10:30:00Z"
                    }
                },
                "type": "object"
            },
            "UsageStats": {
                "title": "Usage Statistics",
                "description": "SMS usage statistics",
                "properties": {
                    "total_messages": {
                        "description": "Total messages sent",
                        "type": "integer",
                        "example": 1250
                    },
                    "successful_messages": {
                        "description": "Successfully delivered messages",
                        "type": "integer",
                        "example": 1200
                    },
                    "failed_messages": {
                        "description": "Failed messages",
                        "type": "integer",
                        "example": 50
                    },
                    "total_cost": {
                        "description": "Total cost",
                        "type": "number",
                        "format": "float",
                        "example": 62.5
                    },
                    "success_rate": {
                        "description": "Success rate percentage",
                        "type": "number",
                        "format": "float",
                        "example": 96
                    },
                    "period": {
                        "description": "Statistics period",
                        "type": "string",
                        "example": "month"
                    },
                    "start_date": {
                        "description": "Period start date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-01"
                    },
                    "end_date": {
                        "description": "Period end date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-31"
                    }
                },
                "type": "object"
            },
            "DailyUsage": {
                "title": "Daily Usage",
                "description": "Daily SMS usage statistics",
                "properties": {
                    "date": {
                        "description": "Date",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "messages_sent": {
                        "description": "Messages sent on this date",
                        "type": "integer",
                        "example": 45
                    },
                    "messages_delivered": {
                        "description": "Messages delivered on this date",
                        "type": "integer",
                        "example": 43
                    },
                    "messages_failed": {
                        "description": "Messages failed on this date",
                        "type": "integer",
                        "example": 2
                    },
                    "total_cost": {
                        "description": "Total cost for this date",
                        "type": "number",
                        "format": "float",
                        "example": 2.25
                    },
                    "success_rate": {
                        "description": "Success rate for this date",
                        "type": "number",
                        "format": "float",
                        "example": 95.56
                    }
                },
                "type": "object"
            },
            "UsageSummary": {
                "title": "Usage Summary",
                "description": "SMS usage summary",
                "properties": {
                    "current_month": {
                        "$ref": "#/components/schemas/UsageStats"
                    },
                    "last_month": {
                        "$ref": "#/components/schemas/UsageStats"
                    },
                    "total_lifetime": {
                        "$ref": "#/components/schemas/UsageStats"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response",
                "properties": {
                    "error": {
                        "description": "Error type",
                        "type": "string",
                        "example": "Unauthorized"
                    },
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "Invalid or missing authentication token"
                    },
                    "code": {
                        "description": "HTTP status code",
                        "type": "integer",
                        "example": 401
                    }
                },
                "type": "object"
            },
            "ValidationErrorResponse": {
                "title": "Validation Error Response",
                "description": "Validation error response",
                "properties": {
                    "message": {
                        "description": "Error message",
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "description": "Validation errors",
                        "type": "object",
                        "example": {
                            "to": [
                                "The to field is required."
                            ],
                            "message": [
                                "The message field is required."
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "PaginationLinks": {
                "title": "Pagination Links",
                "description": "Pagination links",
                "properties": {
                    "first": {
                        "description": "First page URL",
                        "type": "string",
                        "example": "http://api.smshub.com/v1/messages?page=1"
                    },
                    "last": {
                        "description": "Last page URL",
                        "type": "string",
                        "example": "http://api.smshub.com/v1/messages?page=10"
                    },
                    "prev": {
                        "description": "Previous page URL",
                        "type": "string",
                        "example": "http://api.smshub.com/v1/messages?page=2"
                    },
                    "next": {
                        "description": "Next page URL",
                        "type": "string",
                        "example": "http://api.smshub.com/v1/messages?page=4"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "title": "Pagination Meta",
                "description": "Pagination metadata",
                "properties": {
                    "current_page": {
                        "description": "Current page number",
                        "type": "integer",
                        "example": 3
                    },
                    "from": {
                        "description": "First item number on current page",
                        "type": "integer",
                        "example": 31
                    },
                    "last_page": {
                        "description": "Last page number",
                        "type": "integer",
                        "example": 10
                    },
                    "per_page": {
                        "description": "Items per page",
                        "type": "integer",
                        "example": 15
                    },
                    "to": {
                        "description": "Last item number on current page",
                        "type": "integer",
                        "example": 45
                    },
                    "total": {
                        "description": "Total number of items",
                        "type": "integer",
                        "example": 150
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your access token in the format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "oauth2": {
                "type": "oauth2",
                "description": "OAuth2 authentication using Laravel Passport",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "/oauth/token",
                        "scopes": {
                            "read": "Read access to SMS data",
                            "write": "Write access to send SMS messages",
                            "admin": "Admin access to manage providers and projects"
                        }
                    }
                }
            },
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "http://localhost:8000/oauth/token",
                        "scopes": {
                            "read": "Read access",
                            "write": "Write access",
                            "admin": "Admin access"
                        }
                    },
                    "password": {
                        "tokenUrl": "http://localhost:8000/oauth/token",
                        "scopes": {
                            "read": "Read access",
                            "write": "Write access",
                            "admin": "Admin access"
                        }
                    }
                }
            },
            "bearer": {
                "type": "http",
                "description": "Enter token in format (Bearer <token>)",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "OAuth2 authentication endpoints for obtaining access tokens"
        },
        {
            "name": "Messages",
            "description": "SMS message operations - send messages and check delivery status"
        },
        {
            "name": "Providers",
            "description": "SMS provider information and management"
        },
        {
            "name": "Usage",
            "description": "Usage statistics and billing information"
        }
    ],
    "externalDocs": {
        "description": "SMS Hub Developer Guide - Authentication, Rate Limits, Error Handling, and Best Practices",
        "url": "https://docs.smshub.com/developer-guide"
    },
    "security": [
        {
            "bearer": []
        }
    ]
}